********************************************************************* Python *******************************************************
Approach 1 : DFS

class FindElements:

    def __init__(self, root: Optional[TreeNode]):
        self.st = set()
        self.dfs(root, 0)

    def dfs(self, root, x):
        if not root:
            return
        
        root.val = x
        self.st.add(x)
        self.dfs(root.left, 2 * x + 1)
        self.dfs(root.right, 2 * x + 2)
        

    def find(self, target: int) -> bool:
        return target in self.st
        
Approach 2 : BFS

class FindElements:

    def __init__(self, root: Optional[TreeNode]):
        self.st = set()
        self.bfs(root, 0)

    def bfs (self, root, x):
        queue = deque([root])
        root.val = x

        while queue:
            node = queue.popleft()
            self.st.add(node.val)

            if node.left:
                node.left.val = 2 * node.val + 1
                queue.append(node.left)

            if node.right:
                node.right.val = 2 * node.val + 2
                queue.append(node.right)
    
        

    def find(self, target: int) -> bool:
        return target in self.st
        

