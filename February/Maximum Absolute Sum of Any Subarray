******************************************************************** Python ***********************************************************8

class Solution:
    def maxAbsoluteSum(self, nums: List[int]) -> int:
        n = len(nums)

        minsum = nums[0]
        maxsum = nums[0]

        currsummax = nums[0]
        currsummin = nums[0]

        for i in range(1, n):
            currsummax = max(nums[i], currsummax + nums[i])
            maxsum = max(maxsum, currsummax)

            currsummin = min(nums[i], currsummin + nums[i])
            minsum = min(minsum, currsummin)


        return max(maxsum, abs(minsum))


Approach 2:

class Solution:
    def maxAbsoluteSum(self, nums: List[int]) -> int:
        n = len(nums)

        minprefixsum = 0
        maxprefixsum = 0
        prefixsum = 0

        for num in nums:
            prefixsum += num


            minprefixsum = min(minprefixsum, prefixsum)
            maxprefixsum = max(maxprefixsum, prefixsum)


        return maxprefixsum - minprefixsum

