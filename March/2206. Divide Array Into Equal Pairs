******************************************************************************** Python ****************************************************************************
Approach 1: Map

class Solution:
    def divideArray(self, nums):
        count = Counter(nums)
        return all(v % 2 == 0 for v in count.values())

Approach 2: Set

class Solution:
    def divideArray(self, nums: List[int]) -> bool:
        seen = set()

        for num in nums:
            if num in seen:
                seen.remove(num)
            else:
                seen.add(num)

        return len(seen) == 0

Approach 3: bool array

class Solution:
    def divideArray(self, nums: List[int]) -> bool:
        pair = [True] * 501

        for num in nums:
            pair[num] = not pair[num]

        return all(pair)

Approach 4: Using sorting and comparing

class Solution:
    def divideArray(self, nums: List[int]) -> bool:
        nums.sort()
        for i in range(1, len(nums), 2):
            if nums[i] != nums[i - 1]:
                return False

        return True

Approach 5:

class Solution:
    def divideArray(self, nums: List[int]) -> bool:
        nums.sort()
        for i in range(1, len(nums), 2):
            if nums[i] ^ nums[i - 1] != 0:
                return False

        return True
