************************************************************************* Python ****************************************************************************
Approach 1: Brute Force

class Solution:
    def maximumCount(self, nums: List[int]) -> int:
        pos = 0
        neg = 0

        for num in nums:
            if num == 0:
                continue
            elif num < 0:
                neg += 1
            else:
                pos += 1

        return max(pos, neg)


  Approach 2: Binary Search # Beacuse array is sorted in non-decreasing order

class Solution:
    def binary_search(self, nums: List[int], target: int) -> int:
        left = 0
        right = len(nums) - 1
        
        while left <= right:
            mid = left + (right - left) // 2

            if nums[mid] < target:
                left = mid + 1
            else:
                right = mid - 1
            
        return left


    def maximumCount(self, nums: List[int]) -> int:

        N = len(nums)

        positive_count = N - self.binary_search(nums, 1)

        negative_count = self.binary_search(nums, 0)

        return max(positive_count, negative_count)

Approach 3:

class Solution:

    def maximumCount(self, nums: List[int]) -> int:

        n = len(nums)
        
        # Find first non-negative number (index of first 0 or positive number)
        neg_count = bisect.bisect_left(nums, 0)
        
        # Find first positive number (index of first positive number)
        pos_count = n - bisect.bisect_right(nums, 0)
        
        return max(neg_count, pos_count)


        


        

